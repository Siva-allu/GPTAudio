
<!DOCTYPE html>
<html>
  <head>
    <title>GPT Audio</title>
    <style>
      body {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100vh;
        font-size: 36px;
        text-align: center;
      }

      #result,
      #status {
        margin-bottom: 20px;
      }

      #reset-button {
        margin-top: 20px;
        font-size: 24px;
      }
    </style>
  </head>
  <body>
    <div id="result"></div>
    <div id="status"></div>
    <button id="reset-button" onclick="recognition.start()">Reset</button>
    <script>
      // Speech Recognition Varibles
      const recognition = new webkitSpeechRecognition() || new SpeechRecognition();
      recognition.lang = 'en-US'; 

      //Speech Synthesis Variables.
      const speechSynthesis = window.speechSynthesis;
      const voice = speechSynthesis.getVoices()[4];
      
      // Handling recognition result.
      recognition.onresult = async (event) => {
        // Generated text of input voice.
        const { transcript } = event.results[event.results.length - 1][0];
        console.log(event);
        document.getElementById('result').textContent = transcript;
        try{
          //Sending Converted Text to GPT
          const response= await fetch('/GPTresponse',{
            method:'POST',
            headers:{
              'Content-Type':'application/json'
            },
              body: JSON.stringify({text:transcript})
          });

          const responseJson= await response.json();

          // Converting Response Text To voice
          const responseAudio = new SpeechSynthesisUtterance(responseJson.resp);
          responseAudio.voice = voice;
          document.getElementById('status').textContent = 'Speaking..';
         
          speechSynthesis.speak(responseAudio);
        
          responseAudio.onerror= (error)=>{
            console.error(error);
            recognition.start();
          }

          responseAudio.onend = ()=>{
            recognition.start();
          }

          responseAudio.onpause=()=>{
            recognition.start();
          }
          
        } catch(error){
          console.error(error);
        } 

      };

      // Handling end-of-speech event
      recognition.onspeechend = () => {
        document.getElementById('status').textContent = 'Not Listening';
        recognition.stop();
      };

      // Handling  start-of-speech event
      recognition.onstart = () => {
        console.log("Speech started");
        document.getElementById('status').textContent = 'Listening...';
      };

      // Start speech recognition
      recognition.start();
    </script>
  </body>
</html>
